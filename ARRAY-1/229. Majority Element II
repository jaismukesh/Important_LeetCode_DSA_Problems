class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
    //     unordered_map<int,int>mp;
    //     vector<int>ans;
    //     int countMajority=(nums.size()/3);
    //     for(int i=0;i<nums.size();i++){
    //         mp[nums[i]]++;
    //     }
    //     for(auto x:mp){
    //         if(x.second>countMajority){
    //             ans.push_back(x.first);
    //         }
    //     }
    //    return ans;

   int count1=0;
   int count2=0;
   int element1;
   int element2;

      for(int i=0;i<nums.size();i++){
          if(count1==0 && nums[i]!=element2){
              count1=1;
              element1=nums[i];
          }
         else if(count2==0 && nums[i]!=element1){
              count2=1;
              element2=nums[i];
          }

          else if(nums[i]==element1) count1++;
          else if(nums[i]==element2)count2++;
          else{
              count1--,count2--;
          }
      }

      vector<int>ans;
      count1=0;
      count2=0;

      for(int i=0;i<nums.size();i++){
          if(element1==nums[i])count1++;
          if(element2==nums[i])count2++;
      }

      int MajorityCount=(int)nums.size()/3+1;
      if(count1>=MajorityCount) ans.push_back(element1);
      if(count2>=MajorityCount) ans.push_back(element2);

      sort(ans.begin(),ans.end());

      return ans;
    }
};
