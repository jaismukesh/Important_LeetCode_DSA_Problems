variation-1:Given row number r and column number c. Print the element at position (r, c) in Pascal’s triangle.

#include<iostream>
using namespace std;
int NcR(int n, int r) {
    long long res = 1;

    // calculating nCr:
    for (int i = 0; i < r; i++) {
        res = res * (n - i);
        res = res / (i + 1);
    }
    return res;
}


int main()
{
    int r = 5; // row number
    int c = 3; // col number
    int element = NcR(r-1, c-1);
    cout << "The element at position (r,c) is: "
            << element<<endl;
    return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------------------
variation-2:  Given the number of rows n. Print the first n rows of Pascal’s triangle.

class Solution {
public:

    vector<int> generateRow(int row){
        long long ans = 1;
        vector<int> ansRow;
        ansRow.push_back(1);
        for(int col = 1;col<row;col++){
            ans = ans * (row-col);
            ans = ans / (col);
            ansRow.push_back(ans);
        }
        return ansRow;
    }
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans;
        for(int i = 1;i<=numRows;i++){
            ans.push_back(generateRow(i));
        }
        return ans;
        
    }
};

