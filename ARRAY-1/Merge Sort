#include <iostream>
#include<vector>
using namespace std;

void Merge(vector<int> &arr,int s,int e){
  int mid=s+(e-s)/2;
  int left=s;
  int right=mid+1;

  vector<int>temp;
  
  while(left<=mid && right<=e){
    if(arr[left]<=arr[right]){
      temp.push_back(arr[left]);
      left++;
    }
    else{
      temp.push_back(arr[right]);
      right++;
    }
  }

  // if elements on the left half are still left //

    while (left <= mid) {
        temp.push_back(arr[left]);
        left++;
    }

    //  if elements on the right half are still left //
    while (right <= e) {
        temp.push_back(arr[right]);
        right++;
    }

  // transfering all elements from temporary to arr //
    for (int i = s; i <= e; i++) {
        arr[i] = temp[i - s];
    }
  
}

void MergeSort(vector<int> &arr,int s,int e){

  int mid=s+(e-s)/2;
  if(s>=e)return;
  MergeSort(arr,s,mid);
  MergeSort(arr,mid+1,e);
  Merge(arr,s,e);
}
int main() {
 vector<int>arr={3,1,2,4,1,5,2,6,4};
  int n=arr.size();
  int s=0;
  int e=n-1;

  cout<<"element before merge sort"<<endl;
  for(int i=0;i<n;i++){
    cout<<arr[i]<<" ";
  }
  cout<<endl;
  MergeSort(arr,s,e);

   cout<<"element After merge sort"<<endl;
  for(int i=0;i<n;i++){
    cout<<arr[i]<<" ";
  }
  cout<<endl;
}
