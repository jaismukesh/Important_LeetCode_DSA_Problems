class Solution {
public:

   int solve(int m,int n,int i,int j,vector<vector<int>> &dp){
       if(i==m-1 && j==n-1) return 1;
        if(i>=m||j>=n) return 0;
        //step-2:check is already value present in the dp array of not 
        if(dp[i][j]!=-1) return dp[i][j];
        int down=solve(m,n,i+1,j,dp);
        int right=solve(m,n,i,j+1,dp);
       
       //step:3 value store in the dp array.
        dp[i][j]=down+right;
        return dp[i][j];
   
   }
    int uniquePaths(int m, int n) {
        //step-1 create the dp array 
    vector<vector<int>> dp(m+1,vector<int>(n+1,-1));
      
     return solve(m,n,0,0,dp); 

    }
};
