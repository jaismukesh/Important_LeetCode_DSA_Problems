class Solution {
public:

   int maxDepth(TreeNode* root) {
       if(root==NULL){
    return 0;
  }

  int leftheight=maxDepth(root->left);
  int rightheight=maxDepth(root->right);

  int ans=1+ max(leftheight , rightheight);
  return ans; 
    }


    bool isBalanced(TreeNode* root) {
        //base case 
        if(root==NULL)
            return true;
        
          //1  case solved
     int lefheight=maxDepth(root->left);
    int rightheight=maxDepth(root->right);
    int diff=abs(lefheight-rightheight);
     bool ans1=(diff<=1);

            //recursion
    bool leftAns=isBalanced(root->left);
    bool rightAns=isBalanced(root->right);

    if(ans1 && leftAns && rightAns)
        return true;
    else
         return false;
            
    }
};
