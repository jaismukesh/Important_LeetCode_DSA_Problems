class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<int,pair<int,int>>>MaxHeap;
        for(int i=0;i<points.size();i++){
            MaxHeap.push({points[i][0]*points[i][0]+points[i][1]*points[i][1],{points[i][0],points[i][1]}});
            if(MaxHeap.size()>k){
               MaxHeap.pop();
            }
        }

        vector<vector<int>> ans;
        while(!MaxHeap.empty()){
          pair<int,int>p=MaxHeap.top().second;
            MaxHeap.pop();
            ans.push_back({p.first,p.second});
        }
        return ans;
    }
};
