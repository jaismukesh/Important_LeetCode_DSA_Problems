class Solution {
  public:
  
   int sum(Node*root){
       if(root==NULL){
           return 0;
       }
       
       if(!root->left && !root->right){
           int temp=root->data;
           root->data=0;
           return temp;
       }
       
       int Lsum=sum(root->left);
       int Rsum=sum(root->right);
       int temp=root->data;
       root->data=Lsum+Rsum;
       return root->data+temp;
   }
  
    // Convert a given tree to a tree where every node contains sum of values of
    // nodes in left and right subtrees in the original tree
    void toSumTree(Node *node)
    {
       sum(node);
    }
};
